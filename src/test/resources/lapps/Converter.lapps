@Grab('org.anc:index:1.1.0')
import org.anc.index.core.IndexImpl

@Grab('org.anc.lapps.masc:core:1.0.0-SNAPSHOT')
import org.anc.lapps.masc.core.AbstractDataSource

include 'Datasources'
include 'GateServices'
include 'Converters'

class SpokenIndex extends IndexImpl {
	private HashSet<String> spokenKeys = new HashSet<String>()
	
	public SpokenIndex() {
		super()
//		super.loadMasc3Index()
//		super.keys().each { key ->
//			def entry = super.get(key)
//			if (entry.path.contains('/spoken/')) {
//				spokenKeys <<  entry.id
//			}
//		}
	}

	File get(String key) {
		if (!spokenKeys.contains(key)) {
			throw new FileNotFoundException("No entry for key: ${key}")
		}
		return super.get(key)
	}
	
	List<String> keys() {
		return spokenKeys.asList()
	}
}

class SpokenDatasource extends AbstractDataSource {
	public SpokenDatasource() {
		super(new SpokenIndex())
	}
}


application = Pipeline {
	datasource masc.raw.text
	destination '/tmp/converter'
	extension 'json'
	
	add gate.splitter
	add convert.gate2json
}

application.run()
